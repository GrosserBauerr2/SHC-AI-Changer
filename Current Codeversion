using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.IO;
using System.Security.Cryptography;
using System.Runtime.InteropServices;

namespace SHC_AI_Changer
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }
        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void openFileDialog1_FileOk(object sender, CancelEventArgs e)
        {

        }
        //Einlesen der Textdateien
        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            string Wahl = comboBox1.SelectedItem.ToString();
            Wahl = Wahl.Replace("\n", ",");
            string Dateipfad = PfadBox.Text;
            Dateipfad = Dateipfad + @"\ModFiles";
            string Wahl2 = @"\" + Wahl + @"\";
            Dateipfad = Dateipfad + Wahl2;
            string filename = Wahl + ".txt";
            string Picture = Wahl + ".bmp";
            string cleaned = filename.Replace("\n", "").Replace("\r", "");
            string cleanPic = Picture.Replace("\n", "").Replace("\r", "");
            string cleanPfad = Dateipfad.Replace("\n", "").Replace("\r", "");
            MessageBox.Show(cleaned);

            StreamReader nr = new StreamReader(cleanPfad + cleaned);
            pictureBox1.ImageLocation = cleanPfad + cleanPic;
            string x = nr.ReadToEnd();
            string[] y = x.Split('\n');
            textBox1.Text = (y[0]);
            textBox2.Text = (y[1]);
            textBox3.Text = (y[2]);

        }
        //Einlesen des Dateipfades über Button bestätigen
        private void button3_Click(object sender, EventArgs e)
        {
            string Dateipfad = PfadBox.Text;
            Dateipfad = Dateipfad + @"\ModFiles";
            Dateipfad = Dateipfad + @"\BotList.txt";
            MessageBox.Show(Dateipfad);
            StreamReader sr = new StreamReader(Dateipfad);
            string x = sr.ReadToEnd();
            string[] y = x.Split('\n');
            foreach (string s in y)
            {
                comboBox1.Items.Add(s);
            }
        }

        private void button4_Click(object sender, EventArgs e)
        {
            string Dateipfad = PfadBox.Text;
            string exe = Dateipfad + @"\Stronghold Crusader.exe";
            string Sound = textBox1.Text;
            string cleaned = Sound.Replace("\n", "").Replace("\r", "");
            byte[] ba = Encoding.Default.GetBytes(cleaned);
            var hexString = BitConverter.ToString(ba);
            MessageBox.Show(exe);
            BinaryWriter Schreiben = new BinaryWriter(File.OpenWrite(exe));
            if (radioButton10.Checked)
            {

                int j = 0x000000;
                string line;
                int counter = 0;
                List<int> list = new List<int>();
                StreamReader sr = new StreamReader(Dateipfad+ @"\Modfiles\Positions\10\SoundPosition10.txt");
                while ((line = sr.ReadLine()) != null)
                {
                    list.Add(int.Parse(line));
                    counter++;
                }
                int[] Posi10 = list.ToArray();

                for (int i = 0; i < Posi10.Length; i++)
                {
                    j = Posi10[i];
                    Schreiben.BaseStream.Position = j;
                    Schreiben.BaseStream.Write(ba, 0, 2);
                }

            }
            Schreiben.Close();  
            }
        
        // Einlesen der Datei Positionen und abspeichern in Textdateien
        private void button5_Click(object sender, EventArgs e)
        {
            
            string Dateipfad = @"C:\Users\Bauerr\Desktop\Josef\Stronghold & Crusader\Crusader Mod Version";
            string[] Dateipfad2 = new string[16];
            int j = 0;
            for(int i=0; i<Dateipfad2.Length; i++)
            {
                j = i + 1;
                Dateipfad2[i] = Dateipfad + @"\Modfiles\Positions\" + j + @"\SoundPosition" + j + ".txt";
            }
            
            Dateipfad = Dateipfad + @"\Stronghold Crusader.exe";
            string[] match = { "rt_", "sn_", "pg_", "wf_", "sa_", "ca_", "su_", "ri_", "fr_", "ph_", "wa_", "em_", "ni_", "sh_", "ma_", "ab_" }; //This is 12 chars in hex of the string to search
            BinaryReader Lesen = new BinaryReader(File.OpenRead(Dateipfad));
            int Zaehler = 0;
            string ErsterSound = "ab_wi";
            byte[] Bytes2 = File.ReadAllBytes(Dateipfad);
            byte[] Suchbyte2 = Encoding.ASCII.GetBytes(ErsterSound);
            int Wandler =0;
            while (Zaehler < 1740000)
            {
                if (Bytes2[Zaehler] == Suchbyte2[0])
                {
                    if (Bytes2[Zaehler + 1] == Suchbyte2[1])
                    {
                        if (Bytes2[Zaehler + 2] == Suchbyte2[2])
                        {
                            if (Bytes2[Zaehler + 3] == Suchbyte2[3])
                            {
                                Wandler = Convert.ToInt32(Zaehler);

                            }
                        }
                    }
                }
                Zaehler++;
            }

            for (int i=0; i<15;i++)
            {
                Zaehler = Wandler;
                byte[] Suchbyte = Encoding.ASCII.GetBytes(match[i]);
                FileStream fs = new FileStream(Dateipfad2[i], FileMode.OpenOrCreate, FileAccess.Write);
                StreamWriter sw = new StreamWriter(fs);
                byte[] Bytes1 = File.ReadAllBytes(Dateipfad);
                string Umwandler = "";
                int Endzahl = Zaehler + 9600;
                while (Zaehler < Endzahl)
                {
                    if (Bytes1[Zaehler] == Suchbyte[0])
                    {
                        if (Bytes1[Zaehler + 1] == Suchbyte[1])
                        {
                            if (Bytes1[Zaehler + 2] == Suchbyte[2])
                            {
                                Umwandler = Convert.ToString(Zaehler);

                                sw.WriteLine(Umwandler);
                            }
                        }
                    }
                    Zaehler++;
                }
                sw.Close();
                fs.Close();
            }

            Lesen.Close();
        }
        // Zurücksetzen auf Standard-KIs
        private void button1_Click(object sender, EventArgs e)
        {

            string Dateipfad = PfadBox.Text;
            string exe = Dateipfad + @"\Stronghold Crusader.exe";
            string[] Sound = { "rt", "sn", "pg", "wf", "sa","ca", "su", "ri", "fr", "ph", "wa", "em", "ni", "sh", "ma", "ab"  };

                MessageBox.Show(exe);
                BinaryWriter Schreiben = new BinaryWriter(File.OpenWrite(exe));

                byte[] ba10 = Encoding.Default.GetBytes(Sound[9]);
                var hexString = BitConverter.ToString(ba10);
                int j = 0x000000;
                    string line;
                    int counter = 0;
                    List<int> list = new List<int>();
                    StreamReader sr = new StreamReader(Dateipfad + @"\Modfiles\Positions\10\SoundPosition10.txt");
                    while ((line = sr.ReadLine()) != null)
                    {
                        list.Add(int.Parse(line));
                        counter++;
                    }
                    int[] Posi10 = list.ToArray();

                    for (int i = 0; i < Posi10.Length; i++)
                    {
                        j = Posi10[i];
                        Schreiben.BaseStream.Position = j;
                        Schreiben.BaseStream.Write(ba10, 0, 2);
                    }

 

            
        }
    }
}
            
          


          

